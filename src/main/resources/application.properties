# This is the name of our SpringBoot Application.
spring.application.name=SpringBootLogging

# If you want to remove it from the log messages, you can set logging.include-application-name to false.
# logging.include-application-name = false

# If you have a spring.application.group property but don?t want it logged you can set logging.include-application-group to false.
# logging.include-application-group= false

# If the terminal supports ANSI, you can use colors in the log output.
spring.output.ansi.enabled = always

# By default, all logging messages appear on the console, but we can redirect them to a file.
# We can specify via file name or file path. If both are specified, then file name will be taken and path will be ignored.
# logging.file.name = logs/application.log
# Remove file name or file path if you are using logback-spring.xml Configuration

# This will create a folder called "logs" if it doesn't exist and create spring.log file in it.
# logging.file.path = logs

# log level configuration
logging.level.root = warn
logging.level.org.springframework.web = debug
logging.level.org.hibernate = error

# log group configuration
# Using log group we can group multiple logs together and can control there log level.
# Suppose i want to see the detailed logs from tomcat.
logging.group.tomcat = org.apache.catalina, org.apache.coyote, org.apache.tomcat
# set log level to debug to tomcat group
logging.level.tomcat = debug

# disabling the shutdown-hook
logging.register-shutdown-hook = false